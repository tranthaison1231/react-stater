{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx"]
      }
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "prettier/react",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "overrides": [{ "extends": "plugin:jest/all", "files": ["src"] }],
  "plugins": [
    "@typescript-eslint",
    "jest",
    "react",
    "unused-imports",
    "import"
  ],
  "root": true,
  "ignorePatterns": ["*.js", "node_modules"],
  "rules": {
    "import/order": [
      "error",
      { "groups": ["builtin", "external", "parent", "sibling", "index"] }
    ],
    "react/react-in-jsx-scope": "off",
    "import/no-unresolved": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/explicit-function-return-type": "off", // TODO: Create maintenance ticket and fix
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off", // TODO: Create maintenance ticket and fix
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-unused-vars": ["off", { "args": "none" }], // TODO: Create maintenance ticket and fix
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "off",
    "jest/lowercase-name": "off",
    "jest/no-hooks": "off",
    "jest/prefer-expect-assertions": "off",
    "react/display-name": "off",
    "react/no-find-dom-node": "off",
    "react/no-unescaped-entities": "off",
    "react/prop-types": "off",
    "unused-imports/no-unused-imports-ts": "error",
    "unused-imports/no-unused-vars-ts": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ]
  }
}
